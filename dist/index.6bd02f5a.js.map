{"mappings":"AAAA,2DAA2D;AAE3D,MAAM,SAAS,MAAM,aAAa,CAChC,OACA;IAAE,IAAI;AAAS,GACf,MAAM,aAAa,CACjB,OACA;IAAE,IAAI;AAAQ,GACd,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;AAIlC,sBAAsB;AAEtB,2EAA2E;AAE3E,MAAM,UAAU,MAAM,aAAa,CAAC,OAAO;IAAE,IAAI;AAAS,GAAG;IAC3D,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAS,GAAG;QAC3C,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;IACD,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAS,GAAG;QAC3C,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;CACF;AAED,QAAQ,GAAG,CAAC;AAEZ,MAAM,UAAU;IAAC;IAAG;IAAG;IAAG;IAAG;CAAE;AAC/B,eAAe;AACf,IAAI,MAAM;AAEV,mCAAmC;AACnC,oCAAoC;AACpC,KAAK;AAEL,QAAQ,GAAG,CAAC,CAAC,QAAQ,IAAO,OAAO,OAAO,CAAC,EAAE;AAC7C,SAAS,cAAc,CAAC,UAAU,SAAS,GAAG;AAG9C,uCAAuC;AACvC,UAAU;AACV,2CAA2C;AAC3C,wBAAwB;AACxB,KAAK;AACL,qFAAqF;AACrF,gIAAgI;AAChI,6GAA6G;AAE7G,MAAM,OAAO,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC,UAAU,iEAAiE;AACpI,sFAAsF;AACtF,yEAAyE;AACzE,2BAA2B;AAC3B,KAAK,MAAM,CAAC,UACZ,gHAAgH;CAChH,oCAAoC","sources":["App.js"],"sourcesContent":["// creating nested html structure or elements inside react.\r\n\r\nconst parent = React.createElement(\r\n  \"div\",\r\n  { id: \"parent\" },\r\n  React.createElement(\r\n    \"div\",\r\n    { id: \"child\" },\r\n    React.createElement(\"h1\", {}, \"react h1 tag\")\r\n  )\r\n);\r\n\r\n// console.log(parent)\r\n\r\n// Passing more than one children or create another sibling for that child:\r\n\r\nconst parent1 = React.createElement(\"div\", { id: \"parent\" }, [\r\n  React.createElement(\"div\", { id: \"child1\" }, [\r\n    React.createElement(\"h1\", {}, \"react h1 tag\"),\r\n    React.createElement(\"h2\", {}, \"react h2 tag\"),\r\n  ]),\r\n  React.createElement(\"div\", { id: \"child2\" }, [\r\n    React.createElement(\"h1\", {}, \"react h1 tag\"),\r\n    React.createElement(\"h2\", {}, \"react h2 tag\"),\r\n  ]),\r\n]);\r\n\r\nconsole.log(parent1);\r\n\r\nconst numbers = [1, 2, 3, 4, 5];\r\n// let sum = 0;\r\nlet sum = 0;\r\n\r\n// numbers.map((number, index) => (\r\n//   console.log(number * 10, index)\r\n// ))\r\n\r\nnumbers.map((number, i) => (sum += numbers[i]));\r\ndocument.getElementById(\"header\").innerHTML = sum;\r\n\r\n\r\n// const heading = React.createElement(\r\n//   \"h1\",\r\n//   { id: 1, name: \"Anmol learns React\" },\r\n//   \"Hello React World\"\r\n// );\r\n// creates a JS Object which then gets converted to html when the browser renders it.\r\n// in the above, the object parameter is used to give attributes to your tags or elements, eg: id, name are attributes to h1 tag\r\n// console.log(heading); // heading declared above is a react element which is also equivalent to a JS object\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\")); // creates a root for react library, we will then add the heading\r\n// inside root, this root will run the entire react code and render the code inside it\r\n// const header = ReactDOM.createRoot(document.getElementById(\"header\"));\r\n// header.render(\"grbrugi\")\r\nroot.render(parent1);\r\n// root.render(heading); // this takes heading as an object, convert it into h1 tag that the browser understands\r\n//and then render it inside the root\r\n"],"names":[],"version":3,"file":"index.6bd02f5a.js.map","sourceRoot":"/__parcel_source_root/"}